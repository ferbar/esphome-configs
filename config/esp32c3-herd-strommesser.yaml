# gpio 8 ist die blaue led
# gpio 9 ist der boot taster
#
# Schaltung: https://easyeda.com/editor#mode=sim,id=b3143017729b4ca6bda500e2125ab44e

substitutions:
  devicename: esp32c3-herd-strommesser
  upper_devicename: "ESP32C3 Herd Strommesser"

esphome:
  name: $devicename
  on_boot:
    then:
#      - light.turn_on:
#          id: light_signal1
#          effect: "strobe"
      - logger.log: "output.turn-off led1r"
#      - output.turn_off: led1g
#      - output.turn_off: led1r
#      - output.turn_off: led2g
#      - output.turn_off: led2r

esp32:
  variant:  esp32c3
  board: lolin_c3_mini

<<: !include common/base.yaml

wifi:
  networks:
  - ssid: !secret wifi_name
    password: !secret wifi_pass
  output_power: 8.5dB
#  output_power: 20dB
#  on_connect:
#    - light.turn_off:
#        id: light_signal1
#    - light.turn_on:
#        id: light_signal2
#        effect: strobe
    
api:
#  on_client_connected:
#    - light.turn_off:
#        id: light_signal1
#    - light.turn_off:
#        id: light_signal2


switch:
  - !include common/base-switch-reset.yaml


sensor:
  - !include common/base-sensor-wifi.yaml
  - !include common/base-sensor-uptime.yaml
#  - !include common/base-sensor-vcc.yaml
  - platform: adc
    pin: GPIO00
    name: $devicename Phase 1
    id: phase1_wattage
    update_interval: 5s
    unit_of_measurement: W
    attenuation: "12db"
    accuracy_decimals: 0
    filters:
      # spannung = 220ohm*(strom / 3000)
      # 0,07V spannungsabfall auf der diode
      - lambda: "return (x > 0.01) ? round((x+0.07)*10*238) : 0;"
#      - multiply: 
#      - round: 1
#      - lambda: "return round(x*100)/100;"
  - platform: total_daily_energy
    name: "$devicename Phase 1 Tagesverbrauch"
    power_id: phase1_wattage
    filters:
    # Multiplication factor from W to kW is 0.001
    - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock
  - platform: adc
    pin: GPIO01
    name: $devicename Phase 2
    id: phase2_wattage
    update_interval: 5s
    unit_of_measurement: W
    attenuation: "12db"
    accuracy_decimals: 0
    filters:
      - lambda: "return (x > 0.01) ? round((x+0.07)*10*238) : 0;"
#      - round: 1
#      - lambda: "return round(x*100)/100;"
  - platform: total_daily_energy
    name: "$devicename Phase 2 Tagesverbrauch"
    power_id: phase2_wattage
    filters:
    # Multiplication factor from W to kW is 0.001
    - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock
# GPIO02 braucht einen pull up
  - platform: adc
    pin: GPIO03
    name: $devicename Phase 3
    id: phase3_wattage
    update_interval: 5s
    unit_of_measurement: W
    attenuation: "12db"
    accuracy_decimals: 0
    filters:
      - lambda: "return (x > 0.01) ? round((x+0.07)*10*238) : 0;"
#      - round: 1
#      - lambda: "return round(x*100)/100;"
  - platform: total_daily_energy
    name: "$devicename Phase 3 Tagesverbrauch"
    power_id: phase3_wattage
    filters:
    # Multiplication factor from W to kW is 0.001
    - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock

  - platform: adc
    pin: GPIO04
    name: $devicename Phase 4
    id: phase4_wattage
    update_interval: 5s
    unit_of_measurement: W
    attenuation: "12db"
    accuracy_decimals: 0
    filters:
      - lambda: "return (x > 0.01) ? round((x+0.07)*10*238) : 0;"
#      - round: 1
#      - lambda: "return round(x*100)/100;"
  - platform: total_daily_energy
    name: "$devicename Phase 4 Tagesverbrauch"
    power_id: phase4_wattage
    filters:
    # Multiplication factor from W to kW is 0.001
    - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock

# GPIO05 ist ADC2 == WIFI, geht nicht

output:

light:
  - platform: status_led
    name: "${upper_devicename} blue led"
    pin:
      number: GPIO08
      inverted: True

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/Vienna
